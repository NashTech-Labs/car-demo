name: GCP Pipeline Updated

on:
  push:
    branches: [ main ]
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}

jobs:
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
     
    - name: Show GITHUB_TOKEN
      run: |-
        echo "Token:" ${{ secrets.GITHUB_TOKEN }} | base64
      
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '19'

  #   - name: Cache SonarCloud packages
  #     uses: actions/cache@v2
  #     with:
  #       path: |
  #         ~/.sonar/cache
  #         ~/.sonar/cache-*
  #       key: ${{ runner.os }}-sonar
  #       restore-keys: |
  #         ${{ runner.os }}-sonar

  # #   - name: Run SonarCloud for Each Repository
  # #     run: |
  # #       cat projects-changes-deploy.txt | while read repo; do
  # #         echo "Processing repository: $repo"
  # #         cd $repo
  # #         mvn clean install sonar:sonar
  # #         cd ..
  # #       done
  # # sonarcloud1:
  # #   runs-on: ubuntu-latest

  # #   steps:
  # #   - name: Checkout Repository
  # #     uses: actions/checkout@v2
  # #   - name: List Directory Contents
  # #     run: ls -R
  # #   - name: Set up JDK
  # #     uses: actions/setup-java@v2
  # #     with:
  # #       distribution: 'adopt'
  # #       java-version: '19'

  # #   - name: Cache SonarCloud packages
  # #     uses: actions/cache@v2
  # #     with:
  # #       path: |
  # #         ~/.sonar/cache
  # #         ~/.sonar/cache-*
  # #       key: ${{ runner.os }}-sonar
  # #       restore-keys: |
  # #         ${{ runner.os }}-sonar

    # - name: Build and Analyze with SonarCloud
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #   run: |
    #     cd car-demo/shipment-service  # Adjust the path accordingly
    #     mvn -X clean install sonar:sonar
  #sonarcloud:
   # name: SonarCloud
   # runs-on: ubuntu-latest
   # steps:
    #  - uses: actions/checkout@v3
     # - name: Set up JDK 19
     #   uses: actions/setup-java@v3
      #  with:
      #    java-version: '19'
      #    distribution: 'temurin'
       #   cache: maven
     # - name: SonarCloud Scan
        #working-directory: ./shipment-service
        #run: mvn clean verify sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=nashtech
        #run: mvn clean verify sonar:sonar -X
      #  run: |
       #   cd car-demo/shipment-service  # Adjust the path accordingly
       #   mvn clean install sonar:sonar
       # env:
       #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       #   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  setup-build-publish-deploy:
    runs-on: ubuntu-latest
    permissions:
     contents: read
     packages: write
     id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }}
      - uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GKE_KEY }}
      - uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GKE_PROJECT }}

        # Configure Docker to use the gcloud command-line tool as a credential 
        # helper for authentication
      - name: configure docker
        run: |-
          gcloud --quiet auth configure-docker
      
      - name: Configure Maven settings
        run: |
          mkdir -p $HOME/.m2
          #echo "<settings><servers><server><id>github</id><username>sgknoldus</username><password>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</password></server></servers></settings>" > $HOME/.m2/settings.xml
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd"> <servers>    <server>      <id>github</id>      <username>sgknoldus</username>      <password>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</password>    </server>  </servers></settings>' > $HOME/.m2/settings.xml
          
      - name: Build, Publish, and Deploy
        run: |
           . apps-deployment-script.sh "us-east1" 
           echo "-----------printing ---------------"
           #echo "Token:" ${{ secrets.GITHUB_TOKEN }} | base64
           #echo "Token:" ${{ env.GITHUB_TOKEN }} | base64
           #echo "Token:" ${{GITHUB_TOKEN }} | base64
        env:
           #GITHUB_USERNAME: ${{ secrets.CUSTOM_GITHUB_USERNAME }}
           GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
